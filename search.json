[{"path":"https://marinapapa.github.io/swaRmverse/articles/step1_data_preparation.html","id":"input-data---trackdf","dir":"Articles","previous_headings":"","what":"1.1 Input data - trackdf","title":"1 - Data Preparation","text":"swaRmverse package uses trackdf package standardize input dataset. Data expected trajectories (id, x, y, t) generated GPS video tracking. First, lets load data trackdf:","code":"library(swaRmverse)  raw <- read.csv(system.file(\"extdata/video/01.csv\", package = \"trackdf\")) raw <- raw[!raw$ignore, ] head(raw) ##   id         x        y size frame track ignore track_fixed ## 1  1  629.3839 882.4783 1154     1     1  FALSE           1 ## 2  2 1056.1692 656.5207 1064     1     2  FALSE           2 ## 3  3  508.0092 375.2451 1624     1     3  FALSE           3 ## 4  4 1277.6466 373.7491 1443     1     4  FALSE           4 ## 5  5 1379.2844 343.0853 1431     1     5  FALSE           5 ## 6  6 1137.1378 174.5110 1321     1     6  FALSE           6"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step1_data_preparation.html","id":"transform-data","dir":"Articles","previous_headings":"","what":"1.2 Transform data","title":"1 - Data Preparation","text":"trackdf takes input vector positional time series (x,y) along vector ids time. Time transformed date-time POSIXct format. Without additional information, package uses UTC timezone, current time origin experiment, 1 second sampling step (time observations). t column corresponds real time (frames sampling steps, e.g., c(1, 2, 3, 4)), period doesn’t specified. details, see https://swarm-lab.github.io/trackdf/index.html. now, let’s specify attributes create main dataset (dataframe): can now notice ‘set’ column added dataset. swaRmverse using column main unit grouping tracks separate events. default, day data collection used.","code":"data_df <- set_data_format(raw_x = raw$x,                           raw_y = raw$y,                           raw_t = raw$frame,                           raw_id = raw$track_fixed,                           origin = \"2020-02-1 12:00:21\",                           period = \"0.04S\",                           tz = \"America/New_York\"                           )  head(data_df) ## Track table [6 observations] ## Number of tracks:  6  ## Dimensions:  2D  ## Geographic:  FALSE  ## Table class:  data frame ('data.frame') ##   id                   t         x        y        set ## 1  1 2020-02-01 12:00:21  629.3839 882.4783 2020-02-01 ## 2  2 2020-02-01 12:00:21 1056.1692 656.5207 2020-02-01 ## 3  3 2020-02-01 12:00:21  508.0092 375.2451 2020-02-01 ## 4  4 2020-02-01 12:00:21 1277.6466 373.7491 2020-02-01 ## 5  5 2020-02-01 12:00:21 1379.2844 343.0853 2020-02-01 ## 6  6 2020-02-01 12:00:21 1137.1378 174.5110 2020-02-01"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step1_data_preparation.html","id":"multi-species-or-multi-context-data","dir":"Articles","previous_headings":"","what":"1.3 Multi-species or multi-context data","title":"1 - Data Preparation","text":"mentioned , swaRmverse uses date default data organization unit. However, several separate observations conducted day, additional label data needed, context species, additional information can given function. instance, let’s assume data 2 different contexts exist data set: can give additional vector function combined date column set: dataset, can move analyzing collective motion data.","code":"# dummy column raw$context <- c(rep(\"ctx1\", nrow(raw) / 2), rep(\"ctx2\", nrow(raw) / 2)) data_df <- set_data_format(raw_x = raw$x,                           raw_y = raw$y,                           raw_t = raw$frame,                           raw_id = raw$track_fixed,                           origin = \"2020-02-1 12:00:21\",                           period = \"0.04 seconds\",                           tz = \"America/New_York\",                           raw_context = raw$context                           )  head(data_df) ## Track table [6 observations] ## Number of tracks:  6  ## Dimensions:  2D  ## Geographic:  FALSE  ## Table class:  data frame ('data.frame') ##   id                   t         x        y             set ## 1  1 2020-02-01 12:00:21  629.3839 882.4783 2020-02-01_ctx1 ## 2  2 2020-02-01 12:00:21 1056.1692 656.5207 2020-02-01_ctx1 ## 3  3 2020-02-01 12:00:21  508.0092 375.2451 2020-02-01_ctx1 ## 4  4 2020-02-01 12:00:21 1277.6466 373.7491 2020-02-01_ctx1 ## 5  5 2020-02-01 12:00:21 1379.2844 343.0853 2020-02-01_ctx1 ## 6  6 2020-02-01 12:00:21 1137.1378 174.5110 2020-02-01_ctx1"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step2_data_analysis.html","id":"velocity-estimations","dir":"Articles","previous_headings":"","what":"2.1 Velocity estimations","title":"2 - Data Analysis","text":"start adding headings speeds trajectory data, splitting whole dataframe list dataframes, one per set. , need specify whether data correspond geo data (lon-lat) . high number sets dataset, parallelization function can turned (setting parallelize argument TRUE). recommended small intermediate data sizes.","code":"library(swaRmverse) #data_df <- trackdf::tracks #raw$set <- c(rep('ctx1', nrow(raw)/2 ), rep('ctx2', nrow(raw)/2)) raw <- read.csv(system.file(\"extdata/video/01.csv\", package = \"trackdf\")) raw <- raw[!raw$ignore, ]  ## Add fake context raw$context <- c(rep(\"ctx1\", nrow(raw) / 2), rep(\"ctx2\", nrow(raw) / 2))  data_df <- set_data_format(raw_x = raw$x,                           raw_y = raw$y,                           raw_t = raw$frame,                           raw_id = raw$id,                           origin = \"2020-02-1 12:00:21\",                           period = \"0.04S\",                           tz = \"America/New_York\",                           raw_context = raw$context                           )  is_geo <- FALSE data_dfs <- add_velocities(data_df,                            geo = is_geo,                            verbose = TRUE,                            parallelize = FALSE                            ) ## A list of dataframes ## Adding velocity info to every set of the dataset.. ## Done! #head(data_dfs[[1]]) print(paste(\"Velocity information added for\", length(data_dfs), \"sets.\")) ## [1] \"Velocity information added for 2 sets.\""},{"path":"https://marinapapa.github.io/swaRmverse/articles/step2_data_analysis.html","id":"group-characteristics","dir":"Articles","previous_headings":"","what":"2.2 Group characteristics","title":"2 - Data Analysis","text":"Based list positional data calculated velocities, can now calculate timeseries group polarization, average speed, shape. proxy group shape use angle object-oriented bounding box includes position group members average heading group. Small angles close 0 rads represent oblong groups, large angles close pi/2 rads wide groups. group_metrics function calculates timeseries measurement across sets. reduce noise, function calculates smoothed timeseries speed polarization given time window (using moving average). , one can parallelize function data many different days/sets. column N missing_ind added dataframe, showing group size time point whether individual NA data.","code":"sampling_timestep <- 0.04 time_window <- 1 # seconds smoothing_time_window <- time_window / sampling_timestep  g_metr <- group_metrics_per_set(data_list = data_dfs,                                mov_av_time_window = smoothing_time_window,                                step2time = sampling_timestep,                                geo = is_geo,                                parallelize = FALSE                                ) summary(g_metr) ##      set                  t                               pol          ##  Length:2802        Min.   :2020-02-01 12:00:21.03   Min.   :0.01027   ##  Class :character   1st Qu.:2020-02-01 12:00:49.04   1st Qu.:0.20701   ##  Mode  :character   Median :2020-02-01 12:01:17.05   Median :0.32532   ##                     Mean   :2020-02-01 12:01:17.03   Mean   :0.33785   ##                     3rd Qu.:2020-02-01 12:01:45.02   3rd Qu.:0.44768   ##                     Max.   :2020-02-01 12:02:13.03   Max.   :0.97476   ##                                                      NA's   :2         ##      speed              shape                 N          missing_ind     ##  Min.   :   35.42   Min.   :0.0002811   Min.   :3.000   Min.   :0.0000   ##  1st Qu.:  132.02   1st Qu.:0.4236876   1st Qu.:7.000   1st Qu.:0.0000   ##  Median :  175.98   Median :0.8327600   Median :7.000   Median :1.0000   ##  Mean   :  742.80   Mean   :0.8127599   Mean   :7.291   Mean   :0.5543   ##  3rd Qu.:  243.84   3rd Qu.:1.1974449   3rd Qu.:8.000   3rd Qu.:1.0000   ##  Max.   :12232.96   Max.   :1.5706044   Max.   :9.000   Max.   :5.0000   ##  NA's   :2          NA's   :2                           NA's   :2        ##     speed_av          pol_av       ##  Min.   : 111.5   Min.   :0.1696   ##  1st Qu.: 426.3   1st Qu.:0.2852   ##  Median : 670.1   Median :0.3259   ##  Mean   : 746.7   Mean   :0.3379   ##  3rd Qu.:1005.7   3rd Qu.:0.3812   ##  Max.   :2241.2   Max.   :0.5599   ##  NA's   :50       NA's   :50"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step2_data_analysis.html","id":"pairwise-measurements","dir":"Articles","previous_headings":"","what":"2.3 Pairwise measurements","title":"2 - Data Analysis","text":"timeseries positions velocities, can calculate information concerning nearest neighbor group member. estimate distance bearing angle (angle focal individual’s heading neighbor) nearest neighbor individual. , along id nearest neighbor, added columns positional timeseries dataframe:","code":"data_df <- pairwise_metrics(data_list = data_dfs,                             geo = is_geo,                             verbose = TRUE,                             parallelize = FALSE,                             add_coords = FALSE # could be set to TRUE if the relative positions of neighbors are needed                              ) ## Pairwise analysis started.. #tail(data_df)"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step2_data_analysis.html","id":"metrics-of-collective-motion","dir":"Articles","previous_headings":"","what":"2.4 Metrics of collective motion","title":"2 - Data Analysis","text":"Based global local measurements, calculate series metrics aim capture dynamics collective motion group. metrics calculated parts trajectories group performing coordinated collective motion, group moving (average speed higher given threshold) somewhat polarized (polarization higher given threshold). parts defined ‘events’. thresholds asked user run time ‘interactive_mode’ activated, printing quantiles average speed polarization across data. Otherwise, thresholds (pol_lim speed_lim) given inputs. limits set 0, set taken complete event. time observation needed input distinguish continuous events. group pairwise timeseries calculated, one can calculate metrics per event: number events total duration given input thresholds also printed. interested inspecting timeseries measurements, can calculate metrics directly formatted dataset: Since interested comparing different datasets across species contexts, new species id column added: duration, starting time group size (N) event also added result dataframe. suggest filtering events small duration less 3 individuals (singletons pairs). calculated metrics : mean_mean_nnd: temporal average group’s average nearest neighbor distance mean_sd_nnd: temporal average group’s standard deviation nearest neighbor distance sd_mean_nnd: temporal standard deviation group’s average nearest neighbor distance mean_pol: average group’s polarization event sd_pol: standard deviation group’s polarization event stdv_speed: CV (coefficient variation) group’s average speed event mean_sd_front: average standard deviation individuals’ frontness nearest neighbor event mean_mean_bangl: temporal average group’s average angle mean_shape: average shape index group event (0= perfectly wide 1= perfectly long relative heading direction) sd_mean_shape: standard deviation group’s average shape index event.","code":"### Interactive mode, if the limits of speed and polarization are unknown # new_species_metrics <- col_motion_metrics(data_df, #                                            global_metrics = g_metr, #                                            step2time = sampling_timestep, #                                            verbose = TRUE, #                                            speed_lim = NA, #                                            pol_lim = NA #                                              # )  new_species_metrics <- col_motion_metrics(data_df,                                            global_metrics = g_metr,                                            step2time = sampling_timestep,                                            verbose = TRUE,                                            speed_lim = 150,                                            pol_lim = 0.3 )  # summary(new_species_metrics) new_species_metrics <- col_motion_metrics_from_raw(data_df,                                 mov_av_time_window = smoothing_time_window,                                 step2time = sampling_timestep,                                 geo = is_geo,                                 verbose = TRUE,                                 speed_lim = 150,                                 pol_lim = 0.3,                                 parallelize_all = FALSE                                 ) ## Adding velocity info to every set of the dataset.. ## Done! # summary(new_species_metrics) new_species_metrics$species <- \"new_species_1\"  head(new_species_metrics) ##   event N             set          start_time mean_mean_nnd mean_sd_nnd ## 1     1 8 2020-02-01_ctx1 2020-02-01 12:00:21      260.5298   196.39392 ## 2     2 8 2020-02-01_ctx1 2020-02-01 12:00:23      194.2149   125.30859 ## 3     3 7 2020-02-01_ctx1 2020-02-01 12:00:25      178.0867    70.25351 ## 4     4 8 2020-02-01_ctx1 2020-02-01 12:00:26      214.7076    68.20413 ## 5     5 8 2020-02-01_ctx1 2020-02-01 12:00:27      156.2709   132.57649 ## 6     6 7 2020-02-01_ctx1 2020-02-01 12:00:28      159.9396    97.68897 ##   sd_mean_nnd  mean_pol    sd_pol stdv_speed mean_sd_front mean_mean_bangl ## 1    3.779780 0.3334596 0.1445072  1.8472052     0.2927575        1.585528 ## 2   29.110134 0.3260762 0.1675038  1.6394169     0.2781643        1.222012 ## 3   25.204944 0.3260333 0.2012695  1.8615297     0.3184363        1.807799 ## 4          NA 0.4152229        NA         NA     0.2949830        1.495182 ## 5    4.245226 0.2857535 0.1470665  0.9509542     0.2441024        1.513099 ## 6   26.605974 0.3996904 0.1786352  1.9967636     0.2936794        1.691812 ##   mean_shape  sd_shape event_dur       species ## 1  0.7726862 0.4708161      1.28 new_species_1 ## 2  0.7073765 0.3808718      1.12 new_species_1 ## 3  0.9843532 0.4146392      1.08 new_species_1 ## 4  1.1002695        NA      0.04 new_species_1 ## 5  1.0568951 0.3726853      0.32 new_species_1 ## 6  0.9988084 0.3790848      7.80 new_species_1 ## Un-comment bellow to save the output in order to combine it with other datasets (replace 'path2file' with appropriate local path and name). # write.csv(new_species_metrics, file = path2file.csv, row.names = FALSE) # OR R object # save(new_species_metrics, file = path2file.rda)"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step3_swarm_space.html","id":"load-data","dir":"Articles","previous_headings":"","what":"3.1 Load data","title":"3 - The Swarm-Verse","text":"Load metrics collective motion calculated previously. Include events want compare swarm space.","code":"library(swaRmverse)  # load pacakge data for many species data(\"multi_species_metrics\")  ## A] Create the swarm space for this data only: all_data <- multi_species_metrics  ## B] Or bind with new data if continuing from step2 data(\"new_species_metrics\") ## loads the output of step 2  new_species_tobind <- new_species_metrics[,!colnames(new_species_metrics) %in% c('event_dur', 'N', 'set', 'start_time')] # remove columns not needed for the swarm space all_data <- rbind(multi_species_metrics, new_species_tobind)  ## C] Or to use just the new data (overwrites previous command, comment out to compare with the other species): all_data <- new_species_metrics"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step3_swarm_space.html","id":"build-swarm-space","dir":"Articles","previous_headings":"","what":"3.2 Build swarm space","title":"3 - The Swarm-Verse","text":"Create new swarm space PCA analysis:  Check principal component represents get info event: create new swarm space tSNE better study local structure data:","code":"new_pca <- swarm_space(metrics_data = all_data,                        space_type = \"pca\"                        )  ggplot2::ggplot(new_pca$swarm_space,                  ggplot2::aes(x = PC1, y = PC2, color = species)                 ) +                 ggplot2::geom_point() +                 ggplot2::theme_bw() pca_info <- new_pca$pca$rotation[, new_pca$pca$sdev > 1] print(pca_info) ##                          PC1         PC2          PC3         PC4 ## mean_mean_nnd   -0.120557087 -0.47823789 -0.198936000  0.51970748 ## mean_sd_nnd      0.006773648 -0.19922584 -0.693308303  0.22378356 ## sd_mean_nnd      0.096140524 -0.33849821  0.445329654 -0.12538046 ## mean_pol         0.169686225 -0.42069450 -0.035516371 -0.32822763 ## sd_pol           0.551102219  0.02143889 -0.114126771 -0.07014666 ## stdv_speed       0.535969436 -0.10620905  0.006046155 -0.00581108 ## mean_sd_front    0.168816754  0.01838288  0.267740886  0.61225187 ## mean_mean_bangl -0.048978601 -0.53599416  0.352446821  0.09556011 ## mean_shape       0.154168969  0.37491589  0.242066756  0.40886134 ## sd_shape         0.549309319  0.01015417 -0.112278306  0.01629187 ref_data <- new_pca$ref head(ref_data) ##   event N             set          start_time event_dur       species ## 1     1 8 2020-02-01_ctx1 2020-02-01 12:00:21      1.28 new_species_1 ## 2     2 8 2020-02-01_ctx1 2020-02-01 12:00:23      1.12 new_species_1 ## 3     3 7 2020-02-01_ctx1 2020-02-01 12:00:25      1.08 new_species_1 ## 4     4 8 2020-02-01_ctx1 2020-02-01 12:00:26      0.04 new_species_1 ## 5     5 8 2020-02-01_ctx1 2020-02-01 12:00:27      0.32 new_species_1 ## 6     6 7 2020-02-01_ctx1 2020-02-01 12:00:28      7.80 new_species_1 new_tsne <- swarm_space(metrics_data = all_data,                               space_type = \"tsne\",                               tsne_rand_seed = 2023,                               tsne_perplexity = 10                               )  print(\"t-SNE was run with the following parameters:\") ## [1] \"t-SNE was run with the following parameters:\" print(new_tsne$tsne_setup) ##          prop  vals ## 1  perplexity    10 ## 2 random_seed  2023 ## 3    max_iter 10000 ggplot2::ggplot(new_tsne$swarm_space, ggplot2::aes(x = X, y = Y, color = species)) +   ggplot2::geom_point() +   ggplot2::theme_bw()"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step3_swarm_space.html","id":"expand-existing-swarm-space","dir":"Articles","previous_headings":"","what":"3.3 Expand existing swarm space","title":"3 - The Swarm-Verse","text":"Starting previously generated PCA swarm space, add new data:","code":"data(\"multi_species_pca\") data(\"multi_species_pca_data\")  new_pca_data <- expand_pca_swarm_space(metrics_data = new_species_metrics,                                        pca_space = multi_species_pca)  expanded_pca <- rbind(multi_species_pca_data,                        new_pca_data)  ggplot2::ggplot(expanded_pca,                 ggplot2::aes(x = PC1, y = PC2, color = species)) +    ggplot2::geom_point() +    ggplot2::theme_bw()"},{"path":"https://marinapapa.github.io/swaRmverse/articles/step3_swarm_space.html","id":"your-own-swarm-space","dir":"Articles","previous_headings":"","what":"3.4 Your own swarm space","title":"3 - The Swarm-Verse","text":"compare several new datasets, one run analysis end step 2 one . simply bind result datasets together run swarm spaces :","code":"data(\"new_species_metrics\") ## loads the output of step 2  ## Use another dataset: data_df <- get(data(\"tracks\", package = \"trackdf\")) data_df$set <- as.Date(data_df$t)  another_species <- col_motion_metrics_from_raw(data_df,                                 mov_av_time_window = 10,                                 step2time = 1,                                 geo = TRUE,                                 verbose = FALSE,                                 speed_lim = 0,                                 pol_lim = 0.3,                                 parallelize_all = FALSE                                 )  another_species$species <- \"new_species_2\"  ## Bind all the datasets you want to compare here all_data <- rbind(another_species, new_species_metrics)  new_pca <- swarm_space(metrics_data = all_data,                        space_type = \"pca\"                        )  ggplot2::ggplot(new_pca$swarm_space,                 ggplot2::aes(x = PC1, y = PC2, color = species)                 ) +   ggplot2::geom_point() +   ggplot2::theme_bw()"},{"path":"https://marinapapa.github.io/swaRmverse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marina Papadopoulou. Author, maintainer. Simon Garnier. Contributor, copyright holder.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marina Papadopoulou, Simon Garnier (2024). swaRmverse: R package analysis collective motion. R package v.0.1, https://github.com/marinapapa/swaRmverse","code":"@Manual{swarmverse,   title = {swaRmverse: an R package for the analysis of collective motion},   author = {Marina Papadopoulou and Simon Garnier},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/marinapapa/swaRmverse}, }"},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Swarm Space Creation","text":"R package comparative analysis collective motion data swarm space. Based packages trackdf swaRm, swaRmverse aims standardize data collective motion analyzed support comparison properties within across species contexts. swaRmverse work progress, functions likely change package gets developed.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/index.html","id":"publication","dir":"","previous_headings":"","what":"Publication","title":"Swarm Space Creation","text":"information functionality package, along use cases, soon available accompanying publication: Papadopoulou M, Garnier S, King AJ. swaRmverse: R package comparative analysis collective motion. prep. swarm space included metrics first described : Papadopoulou M., Furtbauer ., O’Bryan L.R., Garnier S., Georgopoulou D.G., Bracken .M., Christensen C. King .J. (2023) Dynamics collective motion across time species. Philosophical Transactions Royal Society B 378.1874 doi:10.1098/rstb.2022.0068.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/index.html","id":"acknowledgements","dir":"","previous_headings":"Publication","what":"Acknowledgements","title":"Swarm Space Creation","text":"development package supported 2G-SWARM ONR grant awarded Dr. Andrew J. King Swansea University (UK).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_rel_pos_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Position Coordinates — add_rel_pos_coords","title":"Relative Position Coordinates — add_rel_pos_coords","text":"function calculates x y coordinates neighbor reference frame focal individual.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_rel_pos_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Position Coordinates — add_rel_pos_coords","text":"","code":"add_rel_pos_coords(data, focal_heading = c(0, 1))"},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_rel_pos_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Position Coordinates — add_rel_pos_coords","text":"data Dataframe bearing angle distance individual specific neighbors. Column names must include: bangl, nnd. focal_heading heading focal individual, default = c(0,1) plotting neighbor heading north.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_rel_pos_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Position Coordinates — add_rel_pos_coords","text":"input dataframe additional nnx (nearest neighbor x coordinate)  nny (nearest neighbor y coordinate) columns.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_rel_pos_coords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relative Position Coordinates — add_rel_pos_coords","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_rel_pos_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Position Coordinates — add_rel_pos_coords","text":"","code":"data <- data.frame( bangl = runif(25, 0, pi), nnd = runif(25) ) data <- add_rel_pos_coords(data)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_set_vels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Velocity Timeseries — add_set_vels","title":"Add Velocity Timeseries — add_set_vels","text":"function calculates headings speeds individuals based two location points time taken travel points.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_set_vels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Velocity Timeseries — add_set_vels","text":"","code":"add_set_vels(   data,   geo = FALSE,   verbose = FALSE,   parallelize = FALSE,   independent_call = TRUE )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_set_vels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Velocity Timeseries — add_set_vels","text":"data dataframe time series individuals' positions. Columns must include: t, id, x, y. geo Logical, whether positions geographic coordinates, default = TRUE. verbose Logical, whether post updates progress, default = FALSE. parallelize Logical, whether run function parallel, default = FALSE. independent_call Logical, whether function called part package pipeline (add_velocities). default set TRUE, reflecting direct call function user.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_set_vels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Velocity Timeseries — add_set_vels","text":"input dataframe new speed heading (rotational, rads) columns.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_set_vels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Velocity Timeseries — add_set_vels","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_set_vels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Velocity Timeseries — add_set_vels","text":"","code":"data <- data.frame( x = rnorm(25, sd = 3), y = rnorm(25, sd = 3), t = as.POSIXct(1:25, origin = Sys.time()), id = rep(1, 25) )  data <- add_set_vels(data, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_velocities.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Velocity Timeseries Across Sets — add_velocities","title":"Add Velocity Timeseries Across Sets — add_velocities","text":"function calculates adds speed heading individual time dataset, splits list dataframes based defined sets.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_velocities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Velocity Timeseries Across Sets — add_velocities","text":"","code":"add_velocities(data, geo = FALSE, verbose = FALSE, parallelize = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_velocities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Velocity Timeseries Across Sets — add_velocities","text":"data data frame time series individual's positional data, exported set_data_format function. Columns needed: set, t, id, x, y. geo Logical, whether positions geographic coordinates, default = FALSE. verbose Logical, whether post updates progress, default = FALSE. parallelize Logical, whether run function parallel individuals, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_velocities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Velocity Timeseries Across Sets — add_velocities","text":"list dataframes, element per set input dataframe new columns: head speed.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_velocities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Velocity Timeseries Across Sets — add_velocities","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/add_velocities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Velocity Timeseries Across Sets — add_velocities","text":"","code":"data <- data.frame( set = rep(1, 25), x = rnorm(25, sd = 3), y = rnorm(25, sd = 3), t = as.POSIXct(1:25, origin = Sys.time()), id = rep(1, 25) )  data_list <- add_velocities(data, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_dur_per_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Duration of Each Event — calc_dur_per_event","title":"Duration of Each Event — calc_dur_per_event","text":"function calculates duration event  collective motion dataset.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_dur_per_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duration of Each Event — calc_dur_per_event","text":"","code":"calc_dur_per_event(data, step2time)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_dur_per_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duration of Each Event — calc_dur_per_event","text":"data dataframe event column (added get_event_ids), indicating event ID timestep belongs . Timesteps part event included data. step2time sampling frequency dataframe (many seconds row data).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_dur_per_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duration of Each Event — calc_dur_per_event","text":"dataframe two columns, event ID duration seconds.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_dur_per_event.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Duration of Each Event — calc_dur_per_event","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_dur_per_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duration of Each Event — calc_dur_per_event","text":"","code":"data <- data.frame( set = c(rep('1', 50), rep('2', 50)), event = c(rep(NA, 10), rep(1, 40), rep(2, 30), rep(NA, 20)) )  time_per_row <- 1 # seconds  calc_dur_per_event(data, time_per_row) #>   event event_dur #> 1     1        40 #> 2     2        30"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_events_averages.html","id":null,"dir":"Reference","previous_headings":"","what":"Events Averages — calc_events_averages","title":"Events Averages — calc_events_averages","text":"function calculates metrics per event.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_events_averages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Events Averages — calc_events_averages","text":"","code":"calc_events_averages(df)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_events_averages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Events Averages — calc_events_averages","text":"df data frame time series group measurements. Columns must include: event, set, N, mean_nnd, sd_nnd, pol, speed, sd_front, mean_bangl, shape.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_events_averages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Events Averages — calc_events_averages","text":"dataframe metric value per event.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_events_averages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Events Averages — calc_events_averages","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_global_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Group Metrics — calc_global_metrics","title":"Calculation of Group Metrics — calc_global_metrics","text":"function calculates average speed,  polarization shape group time.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_global_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Group Metrics — calc_global_metrics","text":"","code":"calc_global_metrics(x, geo)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_global_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Group Metrics — calc_global_metrics","text":"x dataframe timestep group. geo Logical, whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_global_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Group Metrics — calc_global_metrics","text":"dataframe one row, group metrics timesteps, columns: set, t, pol, speed, shape, N (number individuals), missing_ind (whether individuals missing).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_global_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculation of Group Metrics — calc_global_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_n_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Events (Internal) — calc_n_events","title":"Number of Events (Internal) — calc_n_events","text":"function calculates number events collective  motion per set, given events_n.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_n_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Events (Internal) — calc_n_events","text":"","code":"calc_n_events(data)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_n_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Events (Internal) — calc_n_events","text":"data dataframe one set (splitted events_n function) keep column.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_n_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Events (Internal) — calc_n_events","text":"integer corresponding number events collective motion  (sequences keep == TRUE).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_n_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Events (Internal) — calc_n_events","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_nn_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Position of Nearest Neighbor Function to Parallelize — calc_nn_metrics","title":"Relative Position of Nearest Neighbor Function to Parallelize — calc_nn_metrics","text":"function calculates bearing angle distance focal individual nearest neighbor.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_nn_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Position of Nearest Neighbor Function to Parallelize — calc_nn_metrics","text":"","code":"calc_nn_metrics(thists, geo)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_nn_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Position of Nearest Neighbor Function to Parallelize — calc_nn_metrics","text":"thists timestep individual positions, ids headings. geo Logical, whether positions geographic coordinates.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_nn_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Position of Nearest Neighbor Function to Parallelize — calc_nn_metrics","text":"input dataframe new columns nnd (nearest neighbor distance), nn_id (id) bangl (nearest neighbor bearing angle).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_nn_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relative Position of Nearest Neighbor Function to Parallelize — calc_nn_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_obb.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimum Bounding Box — calc_obb","title":"Minimum Bounding Box — calc_obb","text":"function calculates minimum bounding box group  objects","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_obb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimum Bounding Box — calc_obb","text":"","code":"calc_obb(x, y, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_obb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimum Bounding Box — calc_obb","text":"x vector x (longitude) coordinates. y vector y (latitude) coordinates. geo logical value indicating whether locations defined geographic coordinates (pairs longitude/latitude values). Default: FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_obb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimum Bounding Box — calc_obb","text":"list bounding box coordinates, height, width,  orientation longest side degrees.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_obb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Minimum Bounding Box — calc_obb","text":"Marina Papadopoulou, m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_pairwise_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Metrics — calc_pairwise_metrics","title":"Pairwise Metrics — calc_pairwise_metrics","text":"function calculates group averages pairwise measures.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_pairwise_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Metrics — calc_pairwise_metrics","text":"","code":"calc_pairwise_metrics(df)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_pairwise_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Metrics — calc_pairwise_metrics","text":"df data frame time series pairwise measurements. Columns must include: set, t, id, nnd, bangl.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_pairwise_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Metrics — calc_pairwise_metrics","text":"dataframe average standard deviation pairwise  measurements group single time step.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/calc_pairwise_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pairwise Metrics — calc_pairwise_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Collective Motion Metrics — col_motion_metrics","title":"Collective Motion Metrics — col_motion_metrics","text":"function calculates metrics collective motion across sets events.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collective Motion Metrics — col_motion_metrics","text":"","code":"col_motion_metrics(   timeseries_data,   global_metrics,   step2time = 1,   verbose = TRUE,   speed_lim = NA,   pol_lim = NA,   noise_thresh = 0 )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collective Motion Metrics — col_motion_metrics","text":"timeseries_data data frame time series individual's positional data time nearest neighbor analysis conducted global_metrics data frame global metrics timeseries. step2time Numeric, sampling frequency dataset (relation time step real time seconds). verbose Logical, whether post updates progress. speed_lim Numeric, threshold speed definition event. info see: pick_threshold. pol_lim Numeric, threshold polarization definition event. info see: pick_threshold. noise_thresh Numeric, limit time difference consecutive events considered event. Default value 0 (event merging).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collective Motion Metrics — col_motion_metrics","text":"dataframe metrics collective motion per event.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collective Motion Metrics — col_motion_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collective Motion Metrics — col_motion_metrics","text":"","code":"## A dataframe with group timeseries g_df <- data.frame(  t = as.POSIXct(1:25, origin = \"2024-03-18 14:56:05\"),  set = rep(1, 25),  pol = c(rnorm(25)),  pol_av = c(rnorm(25)),  speed = c(rnorm(25)),  speed_av = c(rnorm(25)),  shape = c(rnorm(25)),  event = rep(1, 25),  N = rep(3, 25)  )  ## A dataframe with individual timeseries p_df <- data.frame(  t = as.POSIXct(rep(1:25, 3), origin = \"2024-03-18 14:56:05\"),  set = rep(1, 75),  nnd = c(rnorm(75)),  bangl = runif(75, 0, pi),  id = c(rep(1, 25), rep(2, 25), rep(3, 25)),  nn_id = c(   sample(c(2,3), 25, replace = TRUE),   sample(c(1,3), 25, replace = TRUE),   sample(c(2,1), 25, replace = TRUE)),  event = rep(1, 75) ) p_df$only_time <- format(p_df$t, \"%H:%M:%OS2\")  metrics <- col_motion_metrics(  timeseries_data = p_df,  global_metrics = g_df,  step2time = 1,  speed_lim = 0,  pol_lim = 0,  noise_thresh = 1 ) #> Given thresholds return a total of: #> 5 events, over 0.166666666666667 min. #> Calculating metrics for each event, this might take a while..."},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics_from_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","title":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","text":"function calculates metrics collective motion across sets events.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics_from_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","text":"","code":"col_motion_metrics_from_raw(   data,   mov_av_time_window,   step2time = 1,   geo = FALSE,   verbose = FALSE,   speed_lim = NA,   pol_lim = NA,   parallelize_all = FALSE,   noise_thresh = 0 )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics_from_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","text":"data data frame time series individual's positional data time. Columns must include: id, set, t, x, y. mov_av_time_window Numeric, time window average speed polarization timeseries (timesteps). step2time Numeric, sampling frequency dateset (relation time step real time seconds). geo Logical, whether positions geographic coordinates, default = FALSE. verbose Logical, whether post updates progress, default = FALSE. speed_lim Numeric, threshold speed definition event. info see: pick_threshold. pol_lim Numeric, threshold polarization definition event. info see: pick_threshold. parallelize_all Logical, whether parallelize timesteps. noise_thresh Numeric, limit time difference consecutive events considered event. Default value 0 (event merging).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics_from_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","text":"dataframe metrics collective motion per event.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics_from_raw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/col_motion_metrics_from_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collective Motion Metrics from Raw Data — col_motion_metrics_from_raw","text":"","code":"data <- data.frame(  set = rep(1, 75),  x = rnorm(75, sd = 3),  y = rnorm(75, sd = 3),  t = as.POSIXct(rep(1:25, 3), origin = Sys.time()),  id = c(rep(1, 25), rep(2, 25), rep(3, 25))  )  metrics <- col_motion_metrics_from_raw(data,  mov_av_time_window = 5,  step2time = 1,  geo = FALSE,  speed_lim = 0,  pol_lim = 0,  noise_thresh = 1  ) #> Note: the chosen threshold is smaller than the min value of #>  speed in the data, each set will consist of a single event. #> Note: the chosen threshold is smaller than the min value of #>  pol in the data, each set will consist of a single event. #> Given thresholds return a total of: #> 1 events, over 0.416666666666667 min. #> Calculating metrics for each event, this might take a while..."},{"path":"https://marinapapa.github.io/swaRmverse/reference/define_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Events of Collective Motion — define_events","title":"Define Events of Collective Motion — define_events","text":"function adds keep TRUE/FALSE column input dataframe based  whether average speed polarization group larger input thresholds, reflecting whether timestep considered part collective event .","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/define_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Events of Collective Motion — define_events","text":"","code":"define_events(df, sp_lim, pol_lim, step2time, noise_thresh = 0)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/define_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Events of Collective Motion — define_events","text":"df dataframe pol_av speed_av columns polarization speed, respectively (calculated group_metrics_per_set function). sp_lim (lower) threshold speed use defining timesteps part events collective motion. words, event group average speed least sp_lim. pol_lim (lower) threshold polarization use defining timesteps part events collective motion. words, event group's polarization least pol_lim. step2time Sampling frequency, .e. relation time steps (rows) input dataframe real time (seconds). noise_thresh limit time difference consecutive events considered event. default value 0 (event merging).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/define_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define Events of Collective Motion — define_events","text":"dataframe given input extra keep column. function also prints number duration defined  events.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/define_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define Events of Collective Motion — define_events","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/define_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define Events of Collective Motion — define_events","text":"","code":"data <- data.frame( set = rep('1', 50), pol_av = rnorm(50, mean = 0.5, sd = 0.2), speed_av = rnorm(50, mean = 5) ) data <- define_events(data, sp_lim = 5, pol_lim = 0.4, step2time = 1) #> Given thresholds return a total of: #> 8 events, over 0.166666666666667 min."},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_set_vels.html","id":null,"dir":"Reference","previous_headings":"","what":"Call Add Velocity Timeseries — do_add_set_vels","title":"Call Add Velocity Timeseries — do_add_set_vels","text":"function calculates headings speeds individuals based two location points time taken travel points.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_set_vels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call Add Velocity Timeseries — do_add_set_vels","text":"","code":"do_add_set_vels(data, geo = FALSE, verbose = FALSE, parallelize = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_set_vels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call Add Velocity Timeseries — do_add_set_vels","text":"data dataframe time series individuals' positions. Columns must include: t, id, x, y. geo Logical, whether positions geographic coordinates, default = TRUE. verbose Logical, whether post updates progress, default = FALSE. parallelize Logical, whether run function parallel, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_set_vels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call Add Velocity Timeseries — do_add_set_vels","text":"input dataframe new speed heading (rotational, rads) columns.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_set_vels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Call Add Velocity Timeseries — do_add_set_vels","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_vels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding Velocity Information for Individuals in Parallel without Progress Updates — do_add_vels","title":"Adding Velocity Information for Individuals in Parallel without Progress Updates — do_add_vels","text":"function calculates headings speeds based two location points time taken travel points.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_vels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding Velocity Information for Individuals in Parallel without Progress Updates — do_add_vels","text":"","code":"do_add_vels(per_id, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_vels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding Velocity Information for Individuals in Parallel without Progress Updates — do_add_vels","text":"per_id Dataframe time series individuals' positional data. Columns must include: t, id, x, y. geo Logical, whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_vels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding Velocity Information for Individuals in Parallel without Progress Updates — do_add_vels","text":"input dataframe new speed heading (rotational) column.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_add_vels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adding Velocity Information for Individuals in Parallel without Progress Updates — do_add_vels","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA — do_pca","title":"Perform PCA — do_pca","text":"function runs PCA place events collective motion less-dimentional space.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA — do_pca","text":"","code":"do_pca(df)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA — do_pca","text":"df dataframe metrics collective motion per event.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PCA — do_pca","text":"list swarm space (dataframe PC1, PC2, PC3 coordinates per event) complete pca object.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_pca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform PCA — do_pca","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs t-SNE — do_tsne","title":"Performs t-SNE — do_tsne","text":"function calculates coordinates event t-SNE space.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs t-SNE — do_tsne","text":"","code":"do_tsne(df, tsne_rand_seed, tsne_perplexity)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs t-SNE — do_tsne","text":"df dataframe metrics collective motion per event. tsne_rand_seed Random seed able reproduce t-SNE analysis. tsne_perplexity Perplexity parameter tsne. Usually 10-50.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs t-SNE — do_tsne","text":"dataframe X Y coordinates per event t-SNE space.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/do_tsne.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Performs t-SNE — do_tsne","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_ids_per_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Indexes per Set — event_ids_per_set","title":"Event Indexes per Set — event_ids_per_set","text":"execution event_ids per set.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_ids_per_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Indexes per Set — event_ids_per_set","text":"","code":"event_ids_per_set(setdf, ev_idx)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_ids_per_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Indexes per Set — event_ids_per_set","text":"setdf dataframe one set data. discontinuities time. ev_idx last event index added far dataset (e.g., previous set).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_ids_per_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Indexes per Set — event_ids_per_set","text":"vector timeseries event indexes input set.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_ids_per_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Indexes per Set — event_ids_per_set","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Metrics of Collective Motion — event_metrics","title":"Metrics of Collective Motion — event_metrics","text":"function calculates metrics collective motion across  sets events.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metrics of Collective Motion — event_metrics","text":"","code":"event_metrics(global_df, pairwise_df)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metrics of Collective Motion — event_metrics","text":"global_df data frame time series global group measurements. Columns must include: set, t, event, pol, shape, speed. pairwise_df data frame time series pairwise measurements. Columns must include: set, t, id, nnd, bangl.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metrics of Collective Motion — event_metrics","text":"dataframe 10 metrics per event.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metrics of Collective Motion — event_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/event_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metrics of Collective Motion — event_metrics","text":"","code":"## A dataframe with group timeseries g_df <- data.frame( t = 1:25, set = rep(1, 25), pol = c(rnorm(25)), speed = c(rnorm(25)), shape = c(rnorm(25)), event = rep(1, 25), N = rep(2, 25) )  ## A dataframe with individual timeseries p_df <- data.frame( t = rep(1:25, 2), set = rep(1, 50), nnd = c(rnorm(50)), bangl = runif(25, 0, pi), id = c(rep(1, 25), rep(2, 25)), event = rep(1, 50) )  events_dataframe <- event_metrics(g_df, p_df)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_dur.html","id":null,"dir":"Reference","previous_headings":"","what":"Total Duration of All Events — events_dur","title":"Total Duration of All Events — events_dur","text":"function calculates total duration (seconds)  events collective motion dataset.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_dur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total Duration of All Events — events_dur","text":"","code":"events_dur(data, step2time)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_dur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total Duration of All Events — events_dur","text":"data dataframe keep column, representing rows defined events collective motion (added define_events function). step2time sampling frequency dataframe (many seconds row data).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_dur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total Duration of All Events — events_dur","text":"numeric corresponding total duration events  dataset seconds.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_dur.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total Duration of All Events — events_dur","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Events — events_n","title":"Number of Events — events_n","text":"function calculates number events collective  motion dataset.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Events — events_n","text":"","code":"events_n(data)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Events — events_n","text":"data dataframe keep column (representing rows defined events collective motion) set column.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Events — events_n","text":"integer number events collective motion (sequences  keep == TRUE).","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_n.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Events — events_n","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Events — events_n","text":"","code":"data <- data.frame( set = c(rep('1', 50), rep('2', 50)), keep = c(rep(FALSE, 10), rep(TRUE, 70), rep(FALSE, 20)) )  events_n(data) ## 2 events #> [1] 2"},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Events Summary — events_summary","title":"Events Summary — events_summary","text":"function summarizes number events total  duration dataset.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Events Summary — events_summary","text":"","code":"events_summary(data, step2time)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Events Summary — events_summary","text":"data dataframe keep column (representing rows defined events collective motion) set column. step2time sampling frequency dataframe (many seconds row data).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Events Summary — events_summary","text":"dataframe 3 columns: set, ev_count (number  events), dur (duration events seconds).","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Events Summary — events_summary","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/events_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Events Summary — events_summary","text":"","code":"data <- data.frame( set = c(rep('1', 50), rep('2', 50)), keep = c(rep(FALSE, 10), rep(TRUE, 70), rep(FALSE, 20)) )  time_per_row <- 1 # seconds  events_summary(data, time_per_row) #>   set ev_count dur #> 1   1        1  40 #> 2   2        1  30"},{"path":"https://marinapapa.github.io/swaRmverse/reference/expand_pca_swarm_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","title":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","text":"function predicts positions new event data existing PCA space using stats::predict function.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/expand_pca_swarm_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","text":"","code":"expand_pca_swarm_space(metrics_data, pca_space, event_dur_limit = NA)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/expand_pca_swarm_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","text":"metrics_data dataframe new metrics data add swarm space. pca_space PCA object predict , output stats::prcomp function pca element list output swarm_space function. event_dur_limit Numeric, capturing event duration value seconds. Used filter events shorter value. Default = NA, filtering applied.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/expand_pca_swarm_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","text":"dataframe x y coordinates input swarm space per event new species.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/expand_pca_swarm_space.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/expand_pca_swarm_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand Existing Swarm Space (PCA) — expand_pca_swarm_space","text":"","code":"data(multi_species_metrics) data(multi_species_pca) ss <- expand_pca_swarm_space(multi_species_metrics, multi_species_pca)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/frontness.html","id":null,"dir":"Reference","previous_headings":"","what":"Frontness — frontness","title":"Frontness — frontness","text":"Given bearing angle object another, function  calculates frontness, value ranges 0 1 represents  front focal object neighbor.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/frontness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frontness — frontness","text":"","code":"frontness(bs)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/frontness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frontness — frontness","text":"bs vector bearing angles (rad) objects.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/frontness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frontness — frontness","text":"vector length bs representing frontness focal object neighbor.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/frontness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Frontness — frontness","text":"Marina Papadopoulou, m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/frontness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frontness — frontness","text":"","code":"bs <- runif(25, max = pi) frontness(bs) #>  [1] 0.78329569 0.62185330 0.86605874 0.91985234 0.32539892 0.91576207 #>  [7] 0.08054491 0.85551768 0.30502898 0.73636304 0.94096257 0.86102324 #> [13] 0.36417012 0.91252348 0.75292220 0.64148241 0.79545033 0.98497173 #> [19] 0.62236924 0.55532649 0.96106650 0.91563972 0.60327560 0.31155411 #> [25] 0.55515212"},{"path":"https://marinapapa.github.io/swaRmverse/reference/get_event_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Indexes — get_event_ids","title":"Event Indexes — get_event_ids","text":"function returns vector timeseries event IDs  according input keep column dataframe.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/get_event_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Indexes — get_event_ids","text":"","code":"get_event_ids(df)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/get_event_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Indexes — get_event_ids","text":"df dataframe set keep column get timeseries event IDs. keep column added define_events function represents whether timestep part event (whether kept rest analysis). set dataframe ordered time.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/get_event_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Indexes — get_event_ids","text":"vector length rows input dataframe  timeseries event IDs.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/get_event_ids.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Indexes — get_event_ids","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/get_event_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Indexes — get_event_ids","text":"","code":"data <- data.frame( set = c(rep('1', 50), rep('2', 50)), keep = c(rep(FALSE, 10), rep(TRUE, 70), rep(FALSE, 20)) ) data$event <- get_event_ids(data)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Metrics of Collective Motion — group_metrics","title":"Group Metrics of Collective Motion — group_metrics","text":"function calculates average speed, polarization shape group time.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Metrics of Collective Motion — group_metrics","text":"","code":"group_metrics(data, geo, step2time = 1, parallelize = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Metrics of Collective Motion — group_metrics","text":"data dataframe (ordered) time series headings, positions, speeds per individual. dataframe may contain several individuals. include columns: id, t, speed, x, y, head, set. geo Logical, whether positions geographic coordinates, default = FALSE. step2time Numeric, sampling frequency data (relation row data real time seconds). parallelize Logical, whether parallelize time. Suggested large datasets.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Metrics of Collective Motion — group_metrics","text":"dataframe group average timeseries, columns:  set, t, pol, speed, shape, N (number individuals),  missing_ind (whether individuals missing).","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group Metrics of Collective Motion — group_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Metrics of Collective Motion — group_metrics","text":"","code":"data <- data.frame(  set = rep(\"1\", 50),  t = as.POSIXct(rep(1:25, 2), origin = Sys.time()),  id = c(rep(1, 25), rep(2, 25)),  x = rnorm(50),  y = rnorm(50),  head = runif(50, 0, 2 * pi),  speed = rnorm(50)  )  gm <- group_metrics(data,  geo = FALSE,  step2time = 1)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics_per_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","title":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","text":"function calculates timeseries average speed,  polarization shape set dataset","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics_per_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","text":"","code":"group_metrics_per_set(   data_list,   mov_av_time_window,   geo,   step2time,   parallelize = FALSE )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics_per_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","text":"data_list list dataframes groups timeseries per set. Columns must include: id, t, set, head, x, y, speed. mov_av_time_window Integer, timesteps use sliding window average speed polarization. geo Logical, whether positions geographic coordinates, default = FALSE. step2time Double, sampling frequency data (relation time step real time seconds). parallelize Logical, whether parallelize timesteps set.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics_per_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","text":"dataframe group average timeseries set, columns:  set, t, pol, speed, shape, N (number individuals),  missing_ind (whether individuals missing), pol_av (moving average  polarization based input time window) speed_av (moving average  speed based input time window).","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics_per_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_metrics_per_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Metrics of Collective Motion in a Dataset — group_metrics_per_set","text":"","code":"data <- data.frame(  set = rep(\"1\", 50),  t = as.POSIXct(rep(1:25, 2), origin = Sys.time()),  id = c(rep(1, 25), rep(2, 25)),  x = rnorm(50),  y = rnorm(50),  head = runif(50, 0, 2 * pi),  speed = rnorm(50)  )  gm <- group_metrics_per_set(list(data),  mov_av_time_window = 5,  geo = FALSE,  step2time = 1  )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Shape Based on a OOBB — group_shape","title":"Group Shape Based on a OOBB — group_shape","text":"Calculates oblong shape group , relative  average moving direction, along properties minimum object  oriented bounding box (OOBB) around objects.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Shape Based on a OOBB — group_shape","text":"","code":"group_shape(x, y, hs, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Shape Based on a OOBB — group_shape","text":"x vector x (longitude) coordinates. y vector y (latitude) coordinates. hs vector headings objects (degrees). geo logical value indicating whether locations defined geographic coordinates (pairs longitude/latitude values). Default: FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Shape Based on a OOBB — group_shape","text":"list estimate oblong group , details  bounding box, .e. coordinates, height, width, orientation  longest side degrees.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_shape.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group Shape Based on a OOBB — group_shape","text":"Marina Papadopoulou, m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/group_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Shape Based on a OOBB — group_shape","text":"","code":"x <- rnorm(25) y <- rnorm(25, sd = 3) h <- runif(25, 0, 2 * pi) group_shape(x, y, h, geo = FALSE) #> $pts #>              X         Y #> [1,] -2.934162  4.479794 #> [2,] -1.588409 -6.810192 #> [3,]  2.645547 -6.305510 #> [4,]  1.299794  4.984476 #>  #> $height #> [1] 4.263929 #>  #> $width #> [1] 11.36991 #>  #> $angle #>        Y  #> 1.689435  #>  #> $shape #>   hyvecs  #> 1.132502  #>"},{"path":"https://marinapapa.github.io/swaRmverse/reference/moving_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Moving Average — moving_average","title":"Moving Average — moving_average","text":"function calculates moving average time series.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/moving_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moving Average — moving_average","text":"","code":"moving_average(timeseries, window)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/moving_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moving Average — moving_average","text":"timeseries Vector doubles representing timeseries. window Double, time-window average (timesteps).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/moving_average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moving Average — moving_average","text":"vector doubles (average window).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/moving_average.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Moving Average — moving_average","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/moving_average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moving Average — moving_average","text":"","code":"bs <- rnorm(20, mean = 10, sd = 1) moving_average(bs, 5) #>  [1]        NA        NA 10.306572 10.393398 10.427592 10.509909 10.545439 #>  [8] 10.413849 10.421362 10.232866 10.164247  9.935881  9.962680  9.637138 #> [15]  9.492945  9.878210  9.865523        NA        NA        NA"},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Species Collective Motion Metrics — multi_species_metrics","title":"Multi-Species Collective Motion Metrics — multi_species_metrics","text":"dataset containing metrics collective motion 4  species: stickleback fish, homing pigeons, goats, chacma baboons.  used construction initial swarm space : Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Species Collective Motion Metrics — multi_species_metrics","text":"","code":"data('multi_species_metrics')"},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_metrics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Species Collective Motion Metrics — multi_species_metrics","text":"dataframe 118 rows 12 columns: mean_mean_nnd Average nearest neighbor distance mean_sd_nnd Average within-group variation nearest neighbor          distance sd_mean_nnd Temporal variation average nearest neighbor          distance mean_pol Average polarization sd_pol Temporal variation polarization stdv_speed Temporal variation speed mean_sd_front Average within-group variation frontness mean_mean_bangl Average bearing angle mean_shape Average group shape (rads) sd_shape Temporal variation group shape (rads) species Species id event Event id","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_metrics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multi-Species Collective Motion Metrics — multi_species_metrics","text":"Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Species PCA — multi_species_pca","title":"Multi-Species PCA — multi_species_pca","text":"swarm space PCA 4 species: stickleback fish, homing  pigeons, goats chacma baboons. First published part : Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Species PCA — multi_species_pca","text":"","code":"data('multi_species_pca')"},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Species PCA — multi_species_pca","text":"list 5 elements, exported stats::prcomp function.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multi-Species PCA — multi_species_pca","text":"Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Species PCA Data — multi_species_pca_data","title":"Multi-Species PCA Data — multi_species_pca_data","text":"positions events 4 species: stickleback fish, homing  pigeons, goats chacma baboons, PCA swarm space (see  multi_species_pca. First published part : Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Species PCA Data — multi_species_pca_data","text":"","code":"data('multi_species_pca_data')"},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Species PCA Data — multi_species_pca_data","text":"dataframe 3 columns: species, PC1, PC2, PC3.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/multi_species_pca_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multi-Species PCA Data — multi_species_pca_data","text":"Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/new_species_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"The Collective Motion Metrics of a New Species — new_species_metrics","title":"The Collective Motion Metrics of a New Species — new_species_metrics","text":"output dataset vignette 2, containing metrics   collective motion new species.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/new_species_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Collective Motion Metrics of a New Species — new_species_metrics","text":"","code":"data('new_species_metrics')"},{"path":"https://marinapapa.github.io/swaRmverse/reference/new_species_metrics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Collective Motion Metrics of a New Species — new_species_metrics","text":"object class data.frame 60 rows 16 columns.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nn_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest Neighbour Metrics — nn_metrics","title":"Nearest Neighbour Metrics — nn_metrics","text":"function calculates bearing angle distance focal individuals group nearest neighbor time.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nn_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest Neighbour Metrics — nn_metrics","text":"","code":"nn_metrics(   data,   add_coords = FALSE,   geo = FALSE,   verbose = FALSE,   parallelize = FALSE )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/nn_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest Neighbour Metrics — nn_metrics","text":"data dataframe group's positional timeseries one set. Column names must include: id, t, head, x, y. calculations based swaRm package. add_coords Logical, whether data relative positions nearest neighbours converted coordinates reference frame focal individual (nnx, nny). can useful visualization purposes used package pipeling. Default = 'FALSE'. geo Logical, whether positions geographic coordinates, default = FALSE. verbose Logical, whether post updates progress. parallelize Logical, whether parallelize function time.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nn_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nearest Neighbour Metrics — nn_metrics","text":"input dataframe new columns nearest neighbor id (nn_id), bearing angle (bangl), distance (nnd). add_coords TRUE, columns nnx nny  added.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/nn_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Nearest Neighbour Metrics — nn_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nn_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nearest Neighbour Metrics — nn_metrics","text":"","code":"data <- data.frame(  set = rep(\"1\", 50),  t = as.POSIXct(rep(1:25, 2), origin = Sys.time()),  id = c(rep(1, 25), rep(2, 25)),  x = rnorm(50),  y = rnorm(50),  head = runif(50, 0, 2 * pi)  )  nnm <- nn_metrics(data, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/nnba.html","id":null,"dir":"Reference","previous_headings":"","what":"Bearing Angle to Nearest Neighbor — nnba","title":"Bearing Angle to Nearest Neighbor — nnba","text":"Given locations headings different objects,  function determines angle heading object  position nearest neighboring object.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nnba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bearing Angle to Nearest Neighbor — nnba","text":"","code":"nnba(x, y, hs, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/nnba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bearing Angle to Nearest Neighbor — nnba","text":"x vector x (longitude) coordinates. y vector y (latitude) coordinates. hs vector headings (angle rads). geo logical value indicating whether locations defined geographic coordinates (pairs longitude/latitude values). Default: FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nnba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bearing Angle to Nearest Neighbor — nnba","text":"vector length x y representing distance  nearest neighboring object object.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/nnba.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bearing Angle to Nearest Neighbor — nnba","text":"Simon Garnier, garnier@njit.edu,  Marina Papadopoulou, m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/nnba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bearing Angle to Nearest Neighbor — nnba","text":"","code":"x <- rnorm(25) y <- rnorm(25, sd = 3) hs <- rnorm(25, sd = 1) nnba(x, y, hs) #>  [1]  2.4427019 -2.0554164 -1.9716542  1.1035555  1.7748614 -0.4585439 #>  [7] -1.5321244 -0.0801507 -1.5832683 -2.5461191  1.1694133 -3.1123712 #> [13] -1.0801457  1.0965103 -2.2998180  0.6667259 -3.0177790 -0.4518722 #> [19]  0.9545425  0.9354504  1.7446136  2.2512458 -0.4752451  1.7053674 #> [25] -2.2127780"},{"path":"https://marinapapa.github.io/swaRmverse/reference/normalize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Data — normalize_data","title":"Normalize Data — normalize_data","text":"function rescales vector values 0 1.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/normalize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Data — normalize_data","text":"","code":"normalize_data(vec)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/normalize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Data — normalize_data","text":"vec numerical vector normalize.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/normalize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Data — normalize_data","text":"vector doubles, normalized values input vector.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/normalize_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize Data — normalize_data","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/normalize_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Data — normalize_data","text":"","code":"d <- rnorm(20, mean = 10, sd = 1) normalize_data(d) #>  [1] 0.2169732 0.3581060 0.0000000 0.6955193 1.0000000 0.8711250 0.4630068 #>  [8] 0.6298479 0.7588366 0.3621958 0.5680680 0.4490657 0.9603857 0.6298207 #> [15] 0.4394363 0.6628702 0.4486764 0.8632450 0.6007233 0.2821786"},{"path":"https://marinapapa.github.io/swaRmverse/reference/pairwise_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","title":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","text":"function calculates bearing angle distance focal individual group nearest neighbor time, across sets dataset.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pairwise_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","text":"","code":"pairwise_metrics(   data_list,   geo = FALSE,   verbose = FALSE,   parallelize = FALSE,   add_coords = FALSE )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/pairwise_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","text":"data_list list dataframes groups timeseries per set. Columns must include: id, t, set, head,  x, y. geo Logical, whether positions geographic coordinates, default = FALSE. verbose Logical, whether post updates progress, default = FALSE. parallelize Logical, whether run function parallel timesteps, default = FALSE. add_coords Logical, whether data relative positions converted geographic coordinates, default = 'FALSE'.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pairwise_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","text":"dataframe format input list, new columns nearest neighbor id (nn_id), bearing angles (bangl), distances (nnd). add_coords TRUE, columns nnx nny also added.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/pairwise_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pairwise_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise Metrics of Collective Motion in a Dataset — pairwise_metrics","text":"","code":"data <- data.frame(  set = rep(\"1\", 50),  t = as.POSIXct(rep(1:25, 2), origin = Sys.time()),  id = c(rep(1, 25), rep(2, 25)),  x = rnorm(50),  y = rnorm(50),  head = runif(50, 0, 2 * pi)  )  pm <- pairwise_metrics(list(data), geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding Motion Properties in Parallel without Progress Updates — parAddVels","title":"Adding Motion Properties in Parallel without Progress Updates — parAddVels","text":"function calculates headings speeds based two location points time taken travel points.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding Motion Properties in Parallel without Progress Updates — parAddVels","text":"","code":"parAddVels(per_id, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding Motion Properties in Parallel without Progress Updates — parAddVels","text":"per_id Dataframe time series individuals' positional data. Columns must include: t, id, x, y. geo Logical, whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding Motion Properties in Parallel without Progress Updates — parAddVels","text":"input dataframe new speed heading (rotational) column.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adding Motion Properties in Parallel without Progress Updates — parAddVels","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVelsVerb.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding Individual Velocity Information in Parallel - Verbose — parAddVelsVerb","title":"Adding Individual Velocity Information in Parallel - Verbose — parAddVelsVerb","text":"function calculates headings speeds based two location points time taken travel points.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVelsVerb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding Individual Velocity Information in Parallel - Verbose — parAddVelsVerb","text":"","code":"parAddVelsVerb(per_id, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVelsVerb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding Individual Velocity Information in Parallel - Verbose — parAddVelsVerb","text":"per_id Dataframe, time series individuals' positional data. Columns must include: t, id, x, y. geo Logical, whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVelsVerb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding Individual Velocity Information in Parallel - Verbose — parAddVelsVerb","text":"input dataframe new speed heading (rotational) column.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/parAddVelsVerb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adding Individual Velocity Information in Parallel - Verbose — parAddVelsVerb","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_calc_global_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Group Metrics in Parallel — par_calc_global_metrics","title":"Calculation of Group Metrics in Parallel — par_calc_global_metrics","text":"function calls calc_global_metrics parallel.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_calc_global_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Group Metrics in Parallel — par_calc_global_metrics","text":"","code":"par_calc_global_metrics(dfs_per_time, geo)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_calc_global_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Group Metrics in Parallel — par_calc_global_metrics","text":"dfs_per_time list dataframes per timestep. geo Logical, whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_calc_global_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Group Metrics in Parallel — par_calc_global_metrics","text":"dataframe group average timeseries, columns:  set, t, pol, speed, shape, N (number individuals),  missing_ind (whether individuals missing).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_calc_global_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculation of Group Metrics in Parallel — par_calc_global_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_nn_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding Motion Properties in Parallel - Verbose — par_nn_metrics","title":"Adding Motion Properties in Parallel - Verbose — par_nn_metrics","text":"function calculates bearing angle distance focal individual nearest neighbor given timestep.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_nn_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding Motion Properties in Parallel - Verbose — par_nn_metrics","text":"","code":"par_nn_metrics(per_time, geo = FALSE)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_nn_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding Motion Properties in Parallel - Verbose — par_nn_metrics","text":"per_time groups positional data single timestep. Columns must include: id, t, head, x, y. geo Logical, whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_nn_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding Motion Properties in Parallel - Verbose — par_nn_metrics","text":"input dataframe new columns nnd (nearest neighbor distance),  nn_id (id)  bangl (nearest neighbor bearing angle).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/par_nn_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adding Motion Properties in Parallel - Verbose — par_nn_metrics","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/perIdVels.html","id":null,"dir":"Reference","previous_headings":"","what":"Speed and Heading Calculation based on swaRm Package. — perIdVels","title":"Speed and Heading Calculation based on swaRm Package. — perIdVels","text":"function calculates headings speeds based consecutive locations 1 individual. Based heading linear_speed functions swaRm.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/perIdVels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speed and Heading Calculation based on swaRm Package. — perIdVels","text":"","code":"perIdVels(per_id, geo)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/perIdVels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Speed and Heading Calculation based on swaRm Package. — perIdVels","text":"per_id Time series 1 individual's positional data. geo whether positions geographic coordinates, default = FALSE.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/perIdVels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Speed and Heading Calculation based on swaRm Package. — perIdVels","text":"input dataframe new speed heading (rotational) column.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/perIdVels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Speed and Heading Calculation based on swaRm Package. — perIdVels","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pick_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick a Threshold for the Events' Definition — pick_threshold","title":"Pick a Threshold for the Events' Definition — pick_threshold","text":"interactive function calculates prints quantiles  input distribution asks user input threshold value  want keep. threshold given input, function  checks threshold type correct returns . swaRmverse  framework, timesteps lower values threshold  labelled part event.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pick_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick a Threshold for the Events' Definition — pick_threshold","text":"","code":"pick_threshold(data_distr, var, threshold = NA)"},{"path":"https://marinapapa.github.io/swaRmverse/reference/pick_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick a Threshold for the Events' Definition — pick_threshold","text":"data_distr numeric vector pick threshold . package's pipeline timeseries polarization average speed group. var string, distribution use interactive step ask user input. threshold NA (default), function runs interactive mode user inputs given value return. numeric, function just returns input (interactive case ).","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pick_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick a Threshold for the Events' Definition — pick_threshold","text":"selected input value user lower threshold,  variable used definition event.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/pick_threshold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pick a Threshold for the Events' Definition — pick_threshold","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/pick_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pick a Threshold for the Events' Definition — pick_threshold","text":"","code":"d <- rnorm(25, sd = 1) d_variable_name <- \"a variable\" the_threshold <- 0 pick_threshold(d, d_variable_name, threshold = the_threshold) #> [1] 0  ## If the threshold is not known, run the interactive version ## without giving a threshold as input."},{"path":"https://marinapapa.github.io/swaRmverse/reference/set_data_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Formatting — set_data_format","title":"Data Formatting — set_data_format","text":"function wrapper  track function trackdf package.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/set_data_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Formatting — set_data_format","text":"","code":"set_data_format(   raw_x,   raw_y,   raw_t,   raw_id,   origin,   period,   tz,   proj,   format,   ... )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/set_data_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Formatting — set_data_format","text":"raw_x numeric vector representing x coordinates individual(s). raw_y numeric vector representing y coordinates individual(s). raw_t numeric vector can coerced date-time objects datetime representing times (frames) location recorded. raw_id vector representing identity coordinate recording. origin Something can coerced date-time object as_ datetime representing start date time observations t numeric vector. period character vector shorthand format (e.g. \"1 second\") ISO 8601 specification. used t numeric vector represent time unit observations. tz time zone name. See OlsonNames. proj character string sp::CRS object representing projection coordinates. Leave empty coordinates projected (e.g., output video tracking). \"+proj=longlat\" suitable output GPS trackers. format character string indicating formatting 't'. See strptime specify parameter. ... Additional vectors representing categories data split . none, date used unit data separation.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/set_data_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Formatting — set_data_format","text":"track dataframe table, colloquial term  object class track.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/set_data_format.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data Formatting — set_data_format","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/set_data_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Formatting — set_data_format","text":"","code":"# \\donttest{ raw_data <- data.frame(  frame = rep(1:25, 3),  x = rnorm(75),  y = rnorm(75),  id = c(rep(1, 25), rep(2, 25), rep(3, 25))  )  data <- set_data_format(  raw_x = raw_data$x,  raw_y = raw_data$y,  raw_t = raw_data$frame,  raw_id = raw_data$id,  period = 1,  origin = Sys.time(),  tz = \"Africa/Windhoek\"  ) # }"},{"path":"https://marinapapa.github.io/swaRmverse/reference/swaRmverse.html","id":null,"dir":"Reference","previous_headings":"","what":"swaRmverse: Swarm Space Creation — swaRmverse","title":"swaRmverse: Swarm Space Creation — swaRmverse","text":"swaRmverse package provides pipeline comparative  analysis collective movement data (e.g. fish schools, bird flocks, baboon  troops) processing 2-dimensional positional data (x,y,t) GPS  trackers computer vision tracking systems, discretizing events collective motion, calculating set established metrics characterize event, placing events multi-dimensional 'swarm space' constructed metrics.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/swaRmverse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"swaRmverse: Swarm Space Creation — swaRmverse","text":"Papadopoulou Marina, Fürtbauer Ines, O'Bryan Lisa R., Garnier Simon,  Georgopoulou Dimitra G., Bracken Anna M., Christensen Charlotte King  Andrew J. 2023. Dynamics collective motion across time species. Phil.  Trans. R. Soc. B 378: 20220068. http://doi.org/10.1098/rstb.2022.0068","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/swaRmverse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"swaRmverse: Swarm Space Creation — swaRmverse","text":"Marina Papadopoulou <m.papadopoulou.rug@gmail.com> Simon Garnier <garnier@njit.edu> Maintainer: Marina Papadopoulou <m.papadopoulou.rug@gmail.com>","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/swarm_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Swarm Space — swarm_space","title":"Create a Swarm Space — swarm_space","text":"function runs PCA (Principal component analysis) t-SNE (t-distributed Stochastic Neighbor Embedding) global pairwise metrics collective motion per event produce swarm space. PCA computed stats::prcomp function t-SNE Rtsne::Rtsne function.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/swarm_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Swarm Space — swarm_space","text":"","code":"swarm_space(   metrics_data,   space_type = \"pca\",   event_dur_limit = NA,   tsne_rand_seed = NA,   tsne_perplexity = 25 )"},{"path":"https://marinapapa.github.io/swaRmverse/reference/swarm_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Swarm Space — swarm_space","text":"metrics_data dataframe metrics collective motion per event. space_type string, stating choice PCA (\"pca\") t-SNE (\"tsne\"), default = \"pca\". event_dur_limit Numeric, capturing event duration value seconds. Used filter events shorter value. Default = NA, filtering applied. tsne_rand_seed Numeric, random seed t-SNE analysis, ensure reproducibility. Default = NA, value given t-SNE analysis selected. tsne_perplexity Numeric, perplexity parameter t-SNE analysis. Usually 10-50, default = 25.","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/swarm_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Swarm Space — swarm_space","text":"list 3 elements: dataframe representing swarm space (x y coordinates per event species), reference dataframe (ref) including additional event information input metric data dataframe, dataframe t-SNE analysis (tsne_setup) includes input parameters used, list PCA analysis (pca) output stats::prcomp command.","code":""},{"path":[]},{"path":"https://marinapapa.github.io/swaRmverse/reference/swarm_space.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Swarm Space — swarm_space","text":"Marina Papadopoulou m.papadopoulou.rug@gmail.com","code":""},{"path":"https://marinapapa.github.io/swaRmverse/reference/swarm_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Swarm Space — swarm_space","text":"","code":"data(multi_species_metrics) ss <- swarm_space(multi_species_metrics)"},{"path":"https://marinapapa.github.io/swaRmverse/news/index.html","id":"swarmverse-010","dir":"Changelog","previous_headings":"","what":"swaRmverse 0.1.0","title":"swaRmverse 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
